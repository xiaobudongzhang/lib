#include "../apue.h"
#include "../error.c"
#include <netdb.h>
#include <arpa/inet.h>

void printf_family(struct addrinfo *api){
  printf(" family ");
  switch(api->ai_family){
  case AF_INET:
    printf("inet");
    break;
  case AF_INET6:
    printf("inet6");
    break;
  case AF_UNIX:
    printf("unix");
    break;
  default:
    printf("unknown");
  }

  int main(int argc,char *argv[]){
    struct addrinfo *ailist,*aip;
    struct addrinfo hint;
    struct sockaddr_in *sinp;
    const char *addr;
    int err;
    char abuf[INET_ADDRSTRLEN];
    
    if(argc!=3)
      err_quit("usage:%d nodename service",argv[0]);
    hint.ai_flags=AI_CANONNAME;
    hint.ai_family=0;
    hint.ai_socktype=0;
    hint.ai_protocol;
    hint.ai_addrlen=0;
    hint.ai_canonname=NULL;
    hint.ai_addr=NULL;
    hint.ai_next=NULL;
    
    if((err=getaddrinfo(argv[1],argv[2],&hint,&ailist))!=0)
      err_quit("getinfo error:%s",gai_strerror(err));
    
    for(aip=ailist;aip!=NULL;aip=aip->aip_next){
      print_family(aip);
      if(aip->ai_family==AF_INET){
	sinp=(struct sockaddr_in *)aip->ai_addr;
	addr=inet_ntop(AF_INET,&sinp->sin_addr,abuf,INET_ADDRSTRLEN);
	printf("address %s",addr?addr:"unknown");
	printf("port %d",ntohs(sinp->sin_port));
      }
    }
  }
  
  

