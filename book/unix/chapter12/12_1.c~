#include "../apue.h"
#include "../error.c"
#include <pthread.h>
//分离线程
int makethread(void *(*fn)(void *),void *arg){

  int err;
  pthread_t tid;
  pthread_attr_t attr;
  
  err=pthread_attr_init(&attr);
  
  if(err!=0)
    return(err);
  
  err = pthread_attr_setdetachstate(&attr,PTHREAD_CREATE_DETACHED);
  if(err==0)
    err=pthread_create(&tid,&attr,fn,arg);
  sleep(1);
  pthread_attr_destroy(&attr);
  return(err);
}


void *thr_fn1(void *arg){

  //struct foo foo={1,2,3,4};
  printf("thr_fn1\n");
  //pthread_exit((void*)&foo);
}


int main(void){

  
  makethread(thr_fn1,NULL);
  exit(0);
}
