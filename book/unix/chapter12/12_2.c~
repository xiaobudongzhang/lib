#include "../apue.h"
#include "../error.c"
#include <pthread.h>
#include <time.h>
#include <sys/time.h>
//使用递归互斥量
int makethread(void *(*fn)(void *),void *arg){

  int err;
  pthread_t tid;
  pthread_attr_t attr;

  err=pthread_attr_init(&attr);

  if(err!=0)
    return(err);

  err = pthread_attr_setdetachstate(&attr,PTHREAD_CREATE_DETACHED);
  if(err==0)
    err=pthread_create(&tid,&attr,fn,arg);
  sleep(1);
  pthread_attr_destroy(&attr);
  return(err);
}


struct to_info{

  void (*to_fn)(void *);//function
  void *to_arg;
  struct timespec to_wait;

}

#define SECTONSEC 1000000000 
#define USECTONSEC 1000


void * timeout_helper(void *arg){
  struct to_info *tip;
  
  tip = (struct to_info *)arg;
  nanosleep(&tip->to_wait,NULL);
  (*tip->to_fn)(tip->to_arg);
  return(0);
}
